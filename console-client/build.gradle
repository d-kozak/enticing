plugins {
    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'org.jetbrains.kotlin.jvm'
}

group = "cz.vutbr.fit.knot.enticing"
version = "0.0.1-SNAPSHOT"
libsDirName= "../../lib"


repositories {
    mavenCentral()
    jcenter()
}

jar {
    manifest {
        attributes 'Main-Class': 'cz.vutbr.fit.knot.enticing.index.client.MainKt'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

dependencies {
    compile(project(path:":query-dispatcher",configuration:'default'))
    compile(project(path:":index-lib",configuration:'default')){
        // exclude mg4j, it makes the output jar too big, needs to be added externally
        exclude group: "it.unimi.di"
        exclude group: "it.unimi.dsi"
    }
    compile(project(":dto"))

    compile("com.xenomachina:kotlin-argparser:2.0.7")

    /**
     * Fuel - asynchronous coroutine compatible http requests
     */
    compile("com.github.kittinunf.fuel:fuel:2.1.0")
    compile("com.github.kittinunf.fuel:fuel-coroutines:2.1.0")

    /**
     * Kotlin lang deps
     */
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M1")


    /**
     * Mg4j - the indexing lib, needed, but NOT included in the jar
     */
    implementation("it.unimi.di:mg4j-big:5.4.3") {
        // exclude some transitive mg4j dependencies that are messing up the classpath (java.servlet.* was there multiple times)
        exclude group: "org.mortbay.jetty", module: "jetty"
        exclude group: "javax.servlet", module: "servlet-api"
    }
    implementation("it.unimi.dsi:dsiutils:2.3.0")
    implementation("it.unimi.dsi:sux4j:4.0.0")
    
    /**
     * Testing and mocking
     */
    testImplementation("io.mockk:mockk:1.9")
    testCompile("org.assertj:assertj-core:3.11.1")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.2")
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
