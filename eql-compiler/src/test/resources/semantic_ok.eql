Picasso visited Paris
Picasso < visited < Paris
"Picasso visited Paris"
Picasso visited Paris ctx:par
Picasso visited Paris ctx:sent
Picasso (visited | explored) Paris ctx:sent
Picasso (lemma:visit | lemma:explore) Paris ctx:sent
Picasso lemma:(visit | explore) Paris ctx:sent
nertag:person ^ (person.name:Picasso) lemma:(visit | explore) Paris ctx:sent
nertag:person ^ (person.name:Picasso) lemma:(visit | explore) nertag:location ^ (location.name:Paris) ctx:sent
nertag:(person | artist) < (lemma:(influence | impact) | (lemma:paid < lemma:tribute)) < nertag:(person | artist) ctx:par
influencer:=nertag:(person | artist) < (lemma:(influence | impact) | (lemma:paid < lemma:tribute)) < influencee:=nertag:(person | artist) ctx:par && influencer.url != influencee.url
a:=nertag:(person | artist) < lemma:visit < b:=nertag:(person | artist) nertag:location ^ location.name:Barcelona nertag:event ^ event.startdate:1/1/1960 ctx:par && a.url != b.url
(A B) ~ 5
(A | B) C
nertag:person ^ person.birthplace:Brno
# Picasso visited | explored Paris ctx:sent
(Picasso visited) | (explored Paris) ctx:sent

# Valid EQL queries that should be parsed without problems

## Simple queries
hello
howdy
nertag:person
your mum
New York
Donald Trump
nertag:person (visited | entered)
person.name:John
person name
person name !(age | birthdate)



## Assignments and global constraints
john:=person.name:John
john:=person.name:John rupert:=person.name:Rupert && john.birthdate != rupert.birthdate
1:=person.name:John 2:=person.name:Rupert && 1 != 2
1:=person.name:John 2:=person.name:Rupert && 1.url != 2.url

## Align
(one ^ two) | (three ^ four)
(one ^ two) | three ^ four
one ^ two < three ^ four
(one ^ two) < (three ^ four)

## entities and align
person.name:John ^ lemma:ahoj
nertag:person ^ person.name:John
nertag:person ^ person.name:John ^ lemma and more
nertag:person ^ person.name:John ^ lemma:ahoj
pepa:=nertag:person ^ person.name:pepa

1:=person.name:John 2:=person.name:Rupert 3:=location.name:Barcelona && (1.url != 2.url) | !(3.name = 1.name)

(happy < cow milk) | meat

(letter ink) ~ 3
letter ink
not_related letter ink ~ 3

## semantic errors
## the following is invalid (in sequence, all elems should be on the same index, but syntactically correct
"ahoj lemma:cau"

one two three ~ 5 ~ 5

# how len(two < three) > 1, so how can you align it on one index
# mg4j does not even parse it, ends up as a syntax error
one ^ (two < three) ^ four

## Queries that caused problems in practise
person.name:And* lemma:go