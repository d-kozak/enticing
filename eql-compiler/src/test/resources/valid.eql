# Valid EQL queries that should be parsed without problems

## Simple queries
hello
howdy
nertag:person
your mum
New York
Donald Trump
nertag:person (visited:entered)
person.name:John
location.address:Palackeho "ahoj cau jak se mas"
person & name
person name !(age|birthdate)



## Assignments and global constraints
john:=person.name:John
john:=person.name:John rupert:=person.name:Rupert && john.age != rupert.age
1:=person.name:John 2:=person.name:Rupert && 1 != 2
1:=person.name:John 2:=person.name:Rupert && 1.id != 2.id

## Align
(one ^ two ) | (three ^ four)
(one ^ two ) | three ^ four
one ^ two < three ^ four
(one ^ two) < (three ^ four)

## entities and align
person.name:John ^ lemma:ahoj
nertag:person ^ person.name:John
nertag:person ^ person.name:John ^ lemma and more
nertag:person ^ person.name:John ^ lemma:ahoj
pepa:=nertag:person ^ person.name:pepa

1:=person.name:John 2:=person.name:Rupert 3:=location.name:Barcelona && (1.id != 2.id) | !(3.name = 1.name)

(happy < cow - milk) | meat
(happy < animal.type:cow - milk) | meat

(letter ink) ~ 3
letter ink
not_related letter ink ~ 3

## semantic errors
## the following is invalid (in sequence, all elems should be on the same index, but syntactically correct
"ahoj lemma:cau"

one two three ~ 5 ~ 5

# how len(two < three) > 1, so how can you align it on one index
# mg4j does not even parse it, ends up as a syntax error
one ^ (two < three) ^ four

